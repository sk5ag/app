type User @model 
  {
  id: ID!
  username: String!
  firstname: String
  secondname: String
  imageurl: String
  email: String
  activities: [Activity] @connection(name: "UserActivity")
  jobs: [Jobs] @connection(name: "UserJobs")

}
type Event @model {
  id: ID!
  eventtitle: String!
  image: String
  posts: [Post] @connection(name: "EventPosts")
  activities: [Activity] @connection(name: "EventActivity")
}
type Post @model @key(name: "postsByEventId",fields: ["postEventId"]){
  id: ID!
  title: String!
  status: Boolean
  postEventId: String
  event: Event @connection(name: "EventPosts")
  comments: [Comment] @connection(name: "PostComments")
}
type Comment @model {
  id: ID!
  content: String
  post: Post @connection(name: "PostComments")
}
type Activity @model
    @auth(
    rules: [
      {allow: owner, ownerField: "user", operations: [create, update, delete]},
    ])
 {
  id: ID!
  name: String
  description: String
  owneId: String
  reported: Boolean
  completed: Boolean
  eventId: String
  eventTitle: String
  event: Event @connection(name: "EventActivity")
  user: User @connection(name: "UserActivity")
}
type Jobs @model
    @auth(
    rules: [
      {allow: owner, ownerField: "user", operations: [create, update]},
    ])
 {
  id: ID!
  jobname: String
  jobdescription: String
  owneId: String
  jobreported: Boolean
  jobcompleted: Boolean
  jobeventId: String
  jobeventTitle: String
  jobpostId: String
  jobposttitle: String
  reccordState: String
  event: Event @connection(name: "EventActivity")
  user: User @connection(name: "UserJobs")
}